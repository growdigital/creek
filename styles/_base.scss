// Base styles

@import
  // Libraries
  "../_lib/bourbon/bourbon", // Mixins http://bourbon.io
  "../_lib/normalize"; // http://necolas.github.io/normalize.css/

// Variables
/////////////
/////////////

// Color Variables
///////////////////

// Brand colors

// Grey grey
$k40: #999999;

// Additional colors
$link:    blue;
$visited: purple;

// Type variables
//////////////////
// TODO: add nice fonts, oh yes
$head: serif;
$body: serif;

// Breakpoints
///////////////

$small:   20em; //  320px
$medium:  36em; //  576px
$large:   62em; //  992px 
$x-large: 77em; // 1232px


// Mixins - other than Bourbon
//////////
//////////

// Rem 
///////

// Baseline, measured in pixels
// The value should be the same as the font-size value for the html element
// If the html element's font-size is set to 62.5% (of the browser's default font-size of 16px),
// then the variable below would be 10px.
$baseline-px: 16px;
 
@mixin rem($property, $px-values) {
  // Convert the baseline into rems
  $baseline-rem: $baseline-px / 1rem;
  // Print the first line in pixel values
  #{$property}: $px-values;
  // If there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $baseline-rem; }
  @else {
    // Create an empty list that we can dump values into
    $rem-values: unquote("");
    @each $value in $px-values {
      // If the value is zero, return 0
      @if $value == 0 {
        $rem-values: append($rem-values, $value); }
      @else {
        $rem-values: append($rem-values, $value / $baseline-rem); } }
    // Return the property and its list of converted values
    #{$property}: $rem-values; } }
// Usage:
// .element {
//   @include rem('padding',10px 0 2px 5px);
// }

// Border box
//////////////
// http://www.paulirish.com/2012/box-sizing-border-box-ftw/
// IE8 & up
*, *:before, *:after {
  @include box-sizing(border-box);
}


// Atmosphere
//////////////

// Typography
//////////////
body {
  font-family: $body;
}
h1, h2 {
  font-family: $head;
  line-height: 1.2;
}

p  { @include rem ('margin',0 0 5px); }

dl, dt, dd {
  margin: 0;
  padding: 0;
}

// Responsive media
////////////////////
img, embed, object, video {
  display: block;
  height: auto;
  max-width: 100%;
}
.ie6 img {
  width: 100%;
}

// Helper classes
//////////////////
.cf {
  &:after {
    clear: both;
    content: "";
    display: table;
  }
}